"""test

Revision ID: 1afdeb459d61
Revises: 
Create Date: 2024-12-13 18:13:26.411216

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1afdeb459d61'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instagram_app',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inst_app_id', sa.String(length=256), nullable=True),
    sa.Column('inst_app_secret', sa.String(length=255), nullable=True),
    sa.Column('webhook_callback_url', sa.String(length=255), nullable=True),
    sa.Column('webhook_verify_token', sa.String(length=255), nullable=True),
    sa.Column('handle_code_url', sa.String(length=255), nullable=True),
    sa.Column('embed_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('instagram_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_instagram_users_id'), 'instagram_users', ['id'], unique=False)
    op.create_table('telegram_app',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_id', sa.String(), nullable=False),
    sa.Column('api_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_id')
    )
    op.create_index(op.f('ix_telegram_app_id'), 'telegram_app', ['id'], unique=False)
    op.create_table('telegram_message_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(), nullable=False),
    sa.Column('input_text', sa.String(), nullable=False),
    sa.Column('output_text', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_telegram_message_logs_id'), 'telegram_message_logs', ['id'], unique=False)
    op.create_table('telegram_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['telegram_app.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_telegram_users_id'), 'telegram_users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_telegram_users_id'), table_name='telegram_users')
    op.drop_table('telegram_users')
    op.drop_index(op.f('ix_telegram_message_logs_id'), table_name='telegram_message_logs')
    op.drop_table('telegram_message_logs')
    op.drop_index(op.f('ix_telegram_app_id'), table_name='telegram_app')
    op.drop_table('telegram_app')
    op.drop_index(op.f('ix_instagram_users_id'), table_name='instagram_users')
    op.drop_table('instagram_users')
    op.drop_table('instagram_app')
    # ### end Alembic commands ###
